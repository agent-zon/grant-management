# yaml-language-server: $schema=./values.schema.json

global:
  domain: c-127c9ef.stage.kyma.ondemand.com
  imagePullSecret:
    name: docker-registry
  image:
    registry: scai-dev.common.repositories.cloud.sap
    tag: v14
    imagePullPolicy: always
srv:
  bindings:
    auth:
      serviceInstanceName: identity
      parameters:
        credential-type: X509_GENERATED
        app-identifier: grant-api
    destination:
      serviceInstanceName: destination
  image:
    repository: grant-management/api
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 512M
      cpu: 250m
      memory: 216M
  health:
    liveness:
      path: /health
    readiness:
      path: /health
  networkSecurity:
    allowNamespaceInternal: true
  env:
    - name: CDS_REQUIRES_AUTH_KIND
      value: "ias"
    - name: CDS_REQUIRES_DESTINATIONS_KIND
      value: "destinations"

approuter:
  expose:
    enabled: true
    corsPolicy:
      allowOrigins:
        - regex: ".*-approuter-{{ .Release.Namespace }}.{{ .Values.global.domain }}"
        - exact: "https://*.{{ tpl .Values.global.domain . }}"
        - exact: "http://localhost:9000"
        - exact: "http://localhost:4338"
        - regex: ".*.euw.devtunnels.ms"
        - regex: ".*.oauth.pw"
        - regex: ".*.local.oauth.pw"
        - regex: ".*.oauth.pw:5000"
        - regex: ".*.local.oauth.pw:5000"
        - regex: ".*.authz.id"
        - regex: ".*.local.authz.id"
        - regex: ".*.authz.id:5000"
        - regex: ".*.local.authz.id:5000"
        - regex: ".*.localhost:5000"
        - regex: ".*.localhost:9000"
      allowMethods:
        - "GET"
        - "POST"
        - "PUT"
        - "DELETE"
        - "OPTIONS"
        - "PATCH"
        - "HEAD"
      allowHeaders:
        - "*"
      allowCredentials: true

  bindings:
    auth:
      serviceInstanceName: identity
      parameters:
        credential-type: X509_GENERATED
        app-identifier: approuter
  image:
    repository: grant-management/approuter
  runAsUser: 1000
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 250m
      memory: 500M
  health:
    liveness:
      path: /
    readiness:
      path: /
  envFrom:
    - configMapRef:
        name: "{{ .Release.Name }}-approuter-configmap"
  env:
    # TENANT_HOST_PATTERN: "^(.*)-{{ tpl .Values.global.domain . }}"
    # TENANT_MODE: "shared"
    OTEL_EXPORTER_OTLP_ENDPOINT: http://otlp-dashboard:18889
    OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
    OTEL_SERVICE_NAME: approuter
    OTEL_PROPAGATORS: tracecontext,baggage
mcp-proxy:
  image:
    repository: grant-management/mcp-proxy
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 256M
    requests:
      ephemeral-storage: 512M
      cpu: 100m
      memory: 128M
  health:
    liveness:
      path: /health
    readiness:
      path: /health
  networkSecurity:
    allowNamespaceInternal: true
  env:
    - name: MCP_SERVER_URL
      value: "http://localhost:3000/mcp"
    - name: AUTH_SERVER_URL
      value: "http://srv:4004/oauth-server"
    - name: GRANT_MANAGEMENT_URL
      value: "http://srv:4004/grants-management"
    - name: MCP_CLIENT_ID
      value: "mcp-agent-client"
    - name: BASE_URL
      value: "https://agents-approuter-grant-management.c-127c9ef.stage.kyma.ondemand.com/mcp-proxy"

grant-server:
  bindings:
    auth:
      serviceInstanceName: identity
      parameters:
        credential-type: X509_GENERATED
        app-identifier: grant-server
    db:
      serviceInstanceName: postgresql
  image:
    repository: grant-management/grant-server
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 512M
    requests:
      ephemeral-storage: 512M
      cpu: 250m
      memory: 256M
  health:
    liveness:
      path: /health
    readiness:
      path: /health
  networkSecurity:
    allowNamespaceInternal: true
  env:
    - name: ASPNETCORE_URLS
      value: "http://+:8080"

grant-mcp-layer:
  bindings:
    auth:
      serviceInstanceName: identity
      parameters:
        credential-type: X509_GENERATED
        app-identifier: grant-mcp-layer
  image:
    repository: grant-management/grant-mcp-layer
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 256M
    requests:
      ephemeral-storage: 512M
      cpu: 100m
      memory: 128M
  health:
    liveness:
      path: /health
    readiness:
      path: /health
  networkSecurity:
    allowNamespaceInternal: true
  env:
    - name: ASPNETCORE_URLS
      value: "http://+:8080"
    - name: GrantManagementUrl
      value: "http://grant-server:8080"

cockpit-ui:
  image:
    repository: grant-management/cockpit-ui
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 128M
    requests:
      ephemeral-storage: 256M
      cpu: 50m
      memory: 64M
  health:
    liveness:
      path: /
    readiness:
      path: /
  networkSecurity:
    allowNamespaceInternal: true

portal:
  runAsUser: 1993
  bindings:
    auth:
      serviceInstanceName: identity
      parameters:
        credential-type: X509_GENERATED
        app-identifier: grant-portal
    destination:
      serviceInstanceName: destination
  image:
    repository: grant-management/portal
  resources:
    limits:
      ephemeral-storage: 1G
      memory: 500M
    requests:
      ephemeral-storage: 1G
      cpu: 500m
      memory: 500M
  health:
    liveness:
      path: /
    readiness:
      path: /
  networkSecurity:
    allowNamespaceInternal: true

identity:
  serviceOfferingName: identity
  servicePlanName: application
  parameters:
    display-name: agent-grants
    multi-tenant: true
    oauth2-configuration:
      token-policy:
        access-token-format: "jwt"
      redirect-uris:
        - https://{{ tpl .Values.global.domain . }}/login/callback
        - https://*.{{ tpl .Values.global.domain . }}/login/callback
        - https://*.euw.devtunnels.ms/login/callback?authType=ias
        - https://*.oauth.pw/login/callback?authType=ias
        - https://*.local.oauth.pw/login/callback?authType=ias
        - https://*.oauth.pw:5000/login/callback?authType=ias
        - https://*.local.oauth.pw:5000/login/callback?authType=ias
        - https://*.authz.id/login/callback?authType=ias
        - https://*.local.authz.id/login/callback?authType=ias
        - https://*.authz.id:5000/login/callback?authType=ias
        - https://*.local.authz.id:5000/login/callback?authType=ias
        - http://localhost:5000/login/callback?authType=ias
        - http://localhost:5000/login/callback?authType=ias
        - http://localhost:9000/login/callback?authType=ias
        - http://localhost:9000/login/callback?authType=ias

      post-logout-redirect-uris:
        - https://*.{{ tpl .Values.global.domain . }}/*/logout.html

backendDestinations:
  srv-api:
    service: srv
    forwardAuthToken: true
  mcp-proxy:
    service: mcp-proxy
    forwardAuthToken: false
  grant-server:
    service: grant-server
    forwardAuthToken: true
  grant-mcp-layer:
    service: grant-mcp-layer
    forwardAuthToken: true
  cockpit-ui:
    service: cockpit-ui
    forwardAuthToken: false
  # user-portal:
  #   service: portal
  #   forwardAuthToken: true

destination:
  serviceOfferingName: destination
  servicePlanName: lite
  parameters:
    version: 1.0.0

postgresql:
  serviceOfferingName: postgresql-db
  servicePlanName: development
  fullnameOverride: grants-postgres
