version: '3.8'

services:
  srv:
    build: .
    ports:
      - "4004:4004"
    environment:
      - NODE_ENV=development
      - GRANT_SERVER_URL=http://grant-server:8080
    depends_on:
      - postgres

  mcp-proxy:
    build: app/mcp-proxy
    ports:
      - "8080:8080"
    environment:
      - AUTH_SERVER_URL=http://srv:4004/oauth-server
      - GRANT_MANAGEMENT_URL=http://grant-server:8080
      - MCP_SERVER_URL=http://grant-mcp-layer:8080/mcp
    depends_on:
      - srv
      - grant-server
      - grant-mcp-layer

  grant-server:
    build:
      context: app/grant-management
      dockerfile: GrantManagementServer/Dockerfile
    ports:
      - "8081:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=grants;Username=postgres;Password=postgres
    depends_on:
      - postgres

  grant-mcp-layer:
    build:
      context: app/grant-management
      dockerfile: GrantMcpLayer/Dockerfile
    ports:
      - "8082:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - GrantManagementUrl=http://grant-server:8080
      - DownstreamMcpServer=http://mcp-server-example:3000
    depends_on:
      - grant-server
      - mcp-server-example

  cockpit-ui:
    build: app/cockpit-ui
    ports:
      - "8083:80"

  mcp-server-example:
    build: mcp-server-example
    ports:
      - "3000:3000"

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=grants
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  postgres-data:

